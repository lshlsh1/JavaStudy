/*============================================
	■■■ 자바의 주요(중요) 클래스 ■■■
	- Calendar 클래스
============================================*/
/*
 ※ Calendar 클래스는 추상클래스이기 때문에 객체를 생성할 수 없다.
	(추상 클래스 : 미완성된 클래스)

	즉, 『Calendar ob = new Calendar();』→ 이와 같은 구문을 통해 인스턴스 생성 불가

○ Calendar 클래스 객체(인스턴스)를 생성할 수 있는 방법
	
	1. Calendar ob1 = Calendar.getInstance();
	//Calendar클래스가 가지고 있는 getInstance메소드를 이용하여 호출

	2. Calendar ob2 = new GregorianCalendar();
	// new연산자를 이용 GregorianCalendar(하위클래스) 업캐스팅 방식 사용

	3. GregorianCalendar ob3 = new GregorianCalendar();
	//직접 GregorianCalendar 사용하는 방법

	( ※ GregorianCalendar : Calendar 클래스의 하위(자식) 클래스)

*/

//년, 월, 일, 요일을 Calendar 클래스로부터 가져와 출력

import java.util.Calendar;
import java.util.GregorianCalendar;

public class Test137
{
	public static void main(String[] args)
	{
		//Calendar 클래스 인스턴스 생성
		Calendar rightNow = Calendar.getInstance();

		//생성된 달력(Calender) 인스턴스를 통해
		//날짜 관련 정보를 얻어낼 수 있는 메소드 → get()

		int y = rightNow.get(Calendar.YEAR);
		int m = rightNow.get(Calendar.MONTH)+1; //check~!!!
		//월은 자체적으로 배열처리가 되어있다. +1 해줘야 실제 월이 나온다.
		int d = rightNow.get(Calendar.DATE);
		int w = rightNow.get(Calendar.DAY_OF_WEEK);

		System.out.println(y + "-"+m+"-"+d+" "+w);
		//--==>> 2019-3-7 5(요일)


		//테스트
		System.out.println(Calendar.SUNDAY);	//--==>> 1
		System.out.println(Calendar.MONDAY);	//--==>> 2
		System.out.println(Calendar.TUESDAY);	//--==>> 3
		System.out.println(Calendar.WEDNESDAY);	//--==>> 4
		System.out.println(Calendar.THURSDAY);	//--==>> 5
		System.out.println(Calendar.FRIDAY);	//--==>> 6
		System.out.println(Calendar.SATURDAY);	//--==>> 7

		String week = "";

		switch (w)
		{
			//case 1 : week="일요일"; break;
			case Calendar.SUNDAY: week ="일요일"; break;
			//case 2 : week="월요일"; break;
			case Calendar.MONDAY: week ="월요일"; break;
			//case 3 : week="화요일"; break;
			case Calendar.TUESDAY : week = "화요일"; break;
			//case 4 : week="수요일"; break;
			case Calendar.WEDNESDAY : week = "수요일"; break;
			//case 5 : week="목요일"; break;
			case Calendar.THURSDAY : week = "목요일"; break;
			//case 6 : week="금요일"; break;
			case Calendar.FRIDAY : week = "금요일"; break;
			//case 7 : week="토요일"; break;
			case Calendar.SATURDAY : week = "토요일"; break;
		
		}

		System.out.println(y+"-"+m+"-"+d+" "+week);
		//--==>>2019-3-7 목요일


		///////////////////////////////////////////////////////////////////
		
		//Calendar 클래스 인스턴스 생성
		Calendar rightNow2 = new GregorianCalendar();

		String[] week2 = {"일요일","월요일","화요일","수요일","목요일","금요일","토요일"};

		//달력의 날짜 세팅 → 『set()』 메소드 활용
		rightNow2.set(2019, 6, 18); // 월의 자체 배열처리때문에 입력할때는 -1해서 넣어야한다. 

		System.out.println(rightNow2.get(Calendar.DAY_OF_WEEK));
		//--==>>5 → 목요일

		System.out.println(week2[rightNow2.get(Calendar.DAY_OF_WEEK)-1]);
		//--==>>5
		//DAY_OF_WEEK인덱스는 월요일부터 시작 배열의 인덱스는 일요일부터 시작해서 -1

		System.out.println();

		rightNow2.set(1992, 10, 20); // 주의~! 월의 자체 배열처리때문에 입력할때는 -1해서 넣어야한다. 
		System.out.println(week2[rightNow2.get(Calendar.DAY_OF_WEEK)-1]);




	}
}