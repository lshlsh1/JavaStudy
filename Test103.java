/*=====================================
	■■■ 정렬(Sort) 알고리즘 ■■■
	-- 거품 정렬(Bubble Sort)
=======================================*/

/*
 ○ 정렬
	: 데이터를 특정한 규칙(기준)에 맞게 순서대로 나열(오름차순, 내림차순)

 ○ 정렬의 목적
	: 데이터 처리 과정의 편의성이나 가독성을 높이기 위함
	   → 보기좋게...  검색하기 위함

 ○ 정렬의 종류
	: 선택 정렬, 버블 정렬, 삽입 정렬, 힙 정렬, 퀵 정렬, 쉘 정렬 ....
*/

public class Test103
{
	public static void main(String[] args)
	{
		int[] a = {52, 42, 12, 62, 60};

		/*
		52, 42, 12, 62, 60			default
		
		---------------------------------------

		42, 52, 12, 62, 60			0	1
		==	==

		42, 12, 52, 62, 60			1	2
			==  ==

		42, 12, 52, 62, 60			2	3
				==  ==

		42, 12, 52, 60, 62			3	4				
					==	==
		---------------------------------------1회전 //--가장 우측에 있는 값 fix

		12, 42, 52, 60, 62			0	1
		==	==

		12, 42, 52, 60, 62			1	2
			==	==
		
		12, 42, 52, 60, 62			2	3
				==	==		
		---------------------------------------2회전

		12, 42, 52, 60, 62			0	1
		==	==

		12, 42, 52, 60, 62			1	2
			==	==
		
		---------------------------------------3회전

		12, 42, 52, 60, 62			0	1
		==	==

		---------------------------------------4회전

		*/

		//만들어보기

		System.out.print("data : ");
		for (int n : a)
		{
			System.out.print(n+" ");
		}System.out.println();

		System.out.print("sorted data : ");
		/*
		만약 
		i=0 → j<(a.length-1)-i
		i=1 → j<a.length-i
		*/
		for (int i=1 ; i<a.length ; i++)				//-- 1,2,3,4  → 회전수, 뒤에서 뺄셈을 수행해주는 역할
		{
			System.out.println("웅");								
			for ( int j=0 ; j<(a.length)-i ; j++ )	//-- (0-3), (0-2), (0-1), (0) i만큼빼서 fix된 뒷부분 비교를 빼준다
			{
				System.out.println("숑");											//-- j값끼리 비교

				if (a[j]>a[j+1])						//오름차수 정렬
				//if (a[j]<a[j+1])						//내림차수 정렬
				{
					//자리 바꾸기
					a[j] = a[j]^a[j+1];
					a[j+1] = a[j+1]^a[j];
					a[j] = a[j]^a[j+1];
				}
				//	01 12 23 34
				//	01 12 23
				//	01 12
				//	01
			}
		}

		for (int n : a)
		{
			System.out.print(n+" ");
		}System.out.println();

		
	}
}